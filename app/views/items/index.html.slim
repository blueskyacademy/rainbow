h1 Catalog

- if params[:search] || !searched_item_facets.empty?
  .well.well-sm
    .pull-right
      = link_to 'Start over', url_for(search: nil), class: 'btn btn-text btn-sm'
    | Searching for:
    span.btn.btn-text = params[:search]

    - searched_item_facets.each do |field|
      .btn-group
        span.btn.btn-default.btn-sm.disabled
          => field.to_s.humanize
          span.glyphicon.glyphicon-menu-right>
          span.text-primary = params[field]
        a.btn.btn-default.btn-sm.remove href=(url_for(field => nil))
          span.glyphicon.glyphicon-remove

.pull-right
  = render 'list_vs_grid'

= paginate @items
.page-entries-info style="margin-left:10px"
  = page_entries_info @items

/= render 'items/v1/items'
#items-container
  - @items.each do |item|
    .item
      .thumbnail
        = link_to item do
          - if item.filepicker_url?
            = filepicker_image_tag item.filepicker_url, w: 167, h: 127, fit: 'clip'
          - else
            = image_tag "http://placehold.it/167x127&text=No+Image!", class: 'list-group-image'
        .caption
          = render 'item_preview', item: item
          = render 'available_count', item: item

coffee:
  window.ItemsJs.setupItems()
